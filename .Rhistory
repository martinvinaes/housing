muniyears<-merge(muniyears,dstseq,by="muni")
muniyears<-arrange(muniyears,i,year)
View(muniyears)
rep(areas$municode,repeat=2)
rep(areas$municode,each=2)
muniyears$muninum<-rep(areas$municode,each=length(years))
View(muniyears)
View(muniyears)
# #get only with danish origins
# require(magrittr)
# muniyears$danes<-NA
# muniyears$danes<-dst_get_data(table="bef3",
#                     query=list(OMRÅDE="*",
#                                HERKOMST="Personer med dansk oprindelse",
#                                TID="*"),
#                     lang="da",
#                     meta=bef3) %>%
#   extract(,4)
str(bef3)
#create huge matrix with each muniyear and each ieland
iemat<-matrix(NA,nrow=nrow(muniyears),ncol=length(ielands))
#get specific origin country counts for each muni
for (j in 2:length(ielands)){
countrycount<-dst_get_data(table="bef3",
query=list(OMRÅDE="*",
TID="*",
IELAND=ielands[j]),
lang="da",
meta=bef3) %>%
extract(,4)
iemat[,j]<-countrycount
cat("\r", round((j/length(ielands))*100), "% Complete")
}
#get list of non-western countries
nwcountries<-read.table("rawdata/nwcountrylist.txt",sep="\t",skip=1)[,3] %>%
as.character()
#get indices of non-western countries in country list
nwcountryindices<-which(ielands %in% nwcountries)
#create herfindahl for non-western countries
muniyears$herfindx<-NA
for (i in 1:nrow(muniyears)){
herfsum<-0
for (j in nwcountryindices){
ssquare<-(iemat[i,j]/muniyears$totpop[i])^2
herfsum<-herfsum+ssquare
}
muniyears$herfindx[i]<-herfsum
cat("\r", round((i/nrow(muniyears))*100), "% complete")
}
View(ielands)
#create huge matrix with each muniyear and each ieland
iemat<-matrix(NA,nrow=nrow(muniyears),ncol=length(ielands))
#get specific origin country counts for each muni
for (j in 2:length(ielands)){
countrycount<-dst_get_data(table="bef3",
query=list(OMRÅDE="*",
TID="*",
IELAND=ielands[j,1]),
lang="da",
meta=bef3) %>%
extract(,4)
iemat[,j]<-countrycount
cat("\r", round((j/length(ielands))*100), "% Complete")
}
#get list of non-western countries
nwcountries<-read.table("rawdata/nwcountrylist.txt",sep="\t",skip=1)[,3] %>%
as.character()
#get indices of non-western countries in country list
nwcountryindices<-which(ielands %in% nwcountries)
#create herfindahl for non-western countries
muniyears$herfindx<-NA
for (i in 1:nrow(muniyears)){
herfsum<-0
for (j in nwcountryindices){
ssquare<-(iemat[i,j]/muniyears$totpop[i])^2
herfsum<-herfsum+ssquare
}
muniyears$herfindx[i]<-herfsum
cat("\r", round((i/nrow(muniyears))*100), "% complete")
}
library(magrittr)
iemat<-matrix(NA,nrow=nrow(muniyears),ncol=nrow(ielands))
#create huge matrix with each muniyear and each ieland
iemat<-matrix(NA,nrow=nrow(muniyears),ncol=nrow(ielands))
#get specific origin country counts for each muni
for (j in 2:nrow(ielands)){
countrycount<-dst_get_data(table="bef3",
query=list(OMRÅDE="*",
TID="*",
IELAND=ielands[j,1]),
lang="da",
meta=bef3) %>%
extract(,4)
iemat[,j]<-countrycount
cat("\r", round((j/nrow(ielands))*100), "% Complete")
}
#get list of non-western countries
nwcountries<-read.table("rawdata/nwcountrylist.txt",sep="\t",skip=1)[,3] %>%
as.character()
#get indices of non-western countries in country list
nwcountryindices<-which(ielands %in% nwcountries)
#create herfindahl for non-western countries
muniyears$herfindx<-NA
for (i in 1:nrow(muniyears)){
herfsum<-0
for (j in nwcountryindices){
ssquare<-(iemat[i,j]/muniyears$totpop[i])^2
herfsum<-herfsum+ssquare
}
muniyears$herfindx[i]<-herfsum
cat("\r", round((i/nrow(muniyears))*100), "% complete")
}
View(muniyears)
View(iemat)
View(ielands)
#get indices of non-western countries in country list
nwcountryindices<-which(ielands$ieland %in% nwcountries)
#create herfindahl for non-western countries
muniyears$herfindx<-NA
for (i in 1:nrow(muniyears)){
herfsum<-0
for (j in nwcountryindices){
ssquare<-(iemat[i,j]/muniyears$totpop[i])^2
herfsum<-herfsum+ssquare
}
muniyears$herfindx[i]<-herfsum
cat("\r", round((i/nrow(muniyears))*100), "% complete")
}
View(muniyears)
#run plot to see if it looks reasonable
ggplot(muniyears,aes(x=year,y=herfindx,group=muni)) +
geom_line(alpha=.3) +
theme_minimal()
#it does, but herfindahl clearly skews the distribution more
saveRDS(muniyears,file="data/herfindx.rds")
table(muniyears$year)
setwd("~/GitHub/housing/analyses")
setwd("~/GitHub/housing/analyses")
setwd("~/GitHub/housing")
af15<-read.csv("data/afst2015.csv")
View(af15)
af15<-read.csv("data/afst2015.csv",sep=";")
af15<-read.csv("data/afst2015.csv",sep=",")
af15<-read.csv("data/afst2015.csv",sep="\t")
View(af15)
af15[1,]
View(af15)
paste(afst[60,1],afst[60,2],sep=", ")
paste(af15[60,1],af15[60,2],sep=", ")
gsub("[0-9].","","8. Ballerup")
gsub("[0-9]. ","","8. Ballerup")
paste(af15[60,1],gsub("[0-9]. ","",af15[60,2]),sep=", ")
paste(af15[60,1],gsub("[0-9]. ","",af15[60,2]),", Denmark",sep=", ")
paste(af15[60,1],gsub("[0-9]. ","",af15[60,2]),"Denmark",sep=", ")
paste(af15[60:70,1],gsub("[0-9]. ","",af15[60:70,2]),"Denmark",sep=", ")
af15$adrstring<-paste(af15[,1],gsub("[0-9]. ","",af15[,2]),"Denmark",sep=", ")
View(af15)
require(dplyr)
af15$adrstring<-gsub("[0-9]. ","",.) %>%
gsub("[0-9]","",.)
require(magrittr)
af15$adrstring<-gsub("[0-9]. ","",.) %>%
gsub("[0-9]","",.)
af15$adrstring<-af15$adrstring %>%
gsub("[0-9]. ","",.) %>%
gsub("[0-9]","",.)
View(af15)
af15$lat<-NA
af15$lon<-NA
??ggmap
??geocode
geocode(af15$adrstring[1])
require(ggmap)
geocode(af15$adrstring[1])
geocode(af15$adrstring[1])$lon
for (i in 1:nrow(af15)){
gci<-geocode(af15$adrstring[i])
af15$lon[i]<-gci$lon
af15$lat[i]<-gci$lat
}
View(af15)
saveRDS(af15,file="data/af15_2.rds")
require(httr)
parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677")
parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677") %>%
content(.,as="text",encoding="UTF-8")
parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677") %>%
GET(.) %>%
content(.,as="text",encoding="UTF-8")
?fromJSON
adr<-parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677") %>%
GET(.) %>%
content(.,as="text",encoding="UTF-8")
require(rjson)
fromJSON(adr)
fromJSON(adr)$postnummer$nr
?extract
adr<-parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677") %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON() %>%
use_series(postnummer)
adr
adr<-parse_url("http://dawa.aws.dk/adgangsadresser/reverse?x=12.59074&y=55.700677") %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON() %>%
use_series(postnummer) %>%
use_series(nr) %>%
as.numeric()
af15$lon[1]
paste("http://dawa.aws.dk/adgangsadresser/reverse?x=",af15$lon[1],"&y=",af15$lat[1],sep="")
paste("http://dawa.aws.dk/adgangsadresser/reverse?x=",af15$lon[1],"&y=",af15$lat[1],sep="") %>%
parse_url() %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON() %>%
use_series(postnummer) %>%
use_series(nr) %>%
as.numeric()
View(af15)
af15$zip<-NA
paste("http://dawa.aws.dk/adgangsadresser/reverse?x=",af15$lon[5],"&y=",af15$lat[5],sep="") %>%
parse_url() %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON()
as.numeric("0101")
af15$muninum<-NA
#get nearest full adress by using the lon/lats to call the AWS API
af15$zip<-NA
af15$muninum<-NA
for (i in 1:nrow(af15)){
apireturn<-paste("http://dawa.aws.dk/adgangsadresser/reverse?x=",af15$lon[i],"&y=",af15$lat[i],sep="") %>%
parse_url() %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON()
af15$zip[i]<-as.numeric(apireturn$postnummer$nr)
af15$muninum[i]<-as.numeric(apireturn$kommune$kode)
}
View(af15)
#get nearest full adress by using the lon/lats to call the AWS API
af15$zip<-NA
af15$muninum<-NA
for (i in 1:nrow(af15)){
if(!is.na(af15$lon[i])){
apireturn<-paste("http://dawa.aws.dk/adgangsadresser/reverse?x=",af15$lon[i],"&y=",af15$lat[i],sep="") %>%
parse_url() %>%
GET() %>%
content(.,as="text",encoding="UTF-8") %>%
fromJSON()
af15$zip[i]<-as.numeric(apireturn$postnummer$nr)
af15$muninum[i]<-as.numeric(apireturn$kommune$kode)
}
}
View(af15)
saveRDS(af15,file="data/af15_3.rds")
View(af15)
zipprices<-read.csv("data/zipprices_fv15.csv",sep=";",dec=",")
View(zipprices)
length(unique(zipprices$area))
View(zipprices)
uzips<-data.frame(area=unique(zipprices$area))
View(uzips)
?grep
grep("[0-9]",uzips$area[1],value=T)
gsub("[0-9]","",uzips$area[1])
gsub("*[0-9]","",uzips$area[1])
gsub("[^0-9]","",uzips$area[1])
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
View(uzips)
subset(zipprices,area=uzips$area[1])
View(zipprices)
subset(zipprices,area==uzips$area[1])
colmeans(subset(zipprices,area==uzips$area[1])[,3:5])
colMeans(subset(zipprices,area==uzips$area[1])[,3:5])
uzips$q15_1yr<-NA
uzips$hp_2yr<-NA
uzips$hp_1yr<-NA
zipprices<-read.csv("data/zipprices_fv15.csv",sep=";",dec=",")
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
qs<-colMeans(subset(zipprices,area==uzips$area[1])[,3:5])
uzips$hp_1yr[i]<-(qs[3]/qs[2]-1)*100
uzips$hp_2yr[i]<-(qs[3]/qs[1]-1)*100
}
View(uzips)
zipprices<-read.csv("data/zipprices_fv15.csv",sep=";",dec=",")
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
qs<-colMeans(subset(zipprices,area==uzips$area[i])[,3:5])
uzips$hp_1yr[i]<-(qs[3]/qs[2]-1)*100
uzips$hp_2yr[i]<-(qs[3]/qs[1]-1)*100
}
View(uzips)
View(zipprices)
colMeans(subset(zipprices,area==uzips$area[19])[,3:5])
uzips$area[19]
zipprices[19,]
zipprices$area[19]
subset(zipprices,area==uzips$area[19])
View(zipprices)
zipprices$Q2_13==0
zipprices$Q2_13[zipprices$Q2_13==0]<-NA
View(zipprices)
zipprices$Q2_13[zipprices$Q2_13==0]<-NA
zipprices$Q2_14[zipprices$Q2_14==0]<-NA
zipprices$Q2_15[zipprices$Q2_15==0]<-NA
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
qs<-colMeans(subset(zipprices,area==uzips$area[i])[,3:5])
uzips$hp_1yr[i]<-(qs[3]/qs[2]-1)*100
uzips$hp_2yr[i]<-(qs[3]/qs[1]-1)*100
}
View(uzips)
for (i in 1:nrow(uzips)){
qs<-colMeans(subset(zipprices,area==uzips$area[i])[,3:5],na.rm=T)
uzips$hp_1yr[i]<-(qs[3]/qs[2]-1)*100
uzips$hp_2yr[i]<-(qs[3]/qs[1]-1)*100
}
View(uzips)
View(zipprices)
View(uzips)
View(af15)
af15<-left_join(af15,uzips,by="zip")
View(af15)
View(zipprices)
View(uzips)
View(zipprices)
ziptrades<-read.csv("data/ziptrades_fv15.csv",sep=";",dec=",")
View(ziptrades)
View(zipprices)
subset(zipprices,area==uzips$area[5])[,3:5]
subset(ziptrades,area==uzips$area[5])[,3:5]
ps<-subset(zipprices,area==uzips$area[5])[,3:5]
ts<-subset(ziptrades,area==uzips$area[5])[,3:5]
weighted.mean(x=ps[,1],ws=ts[,2])
weighted.mean(x=ps[,1],ws=ts[,1])
ps[,1]
mean(ps[,1])
weighted.mean(x=ps[,1],w=ts[,1])
#get zip prices weighted by trade frequency
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
ps<-subset(zipprices,area==uzips$area[5])[,3:5]
ts<-subset(ziptrades,area==uzips$area[5])[,3:5]
qminus2<-weighted.mean(x=ps[,1],w=ts[,1])
qminus1<-weighted.mean(x=ps[,2],w=ts[,2])
q0<-weighted.mean(x=ps[,3],w=ts[,3])
uzips$hp_1yr[i]<-(q0/qminus1-1)*100
uzips$hp_2yr[i]<-(q0/qminus2-1)*100
}
View(uzips)
#get zip prices weighted by trade frequency
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
ps<-subset(zipprices,area==uzips$area[i])[,3:5]
ts<-subset(ziptrades,area==uzips$area[i])[,3:5]
qminus2<-weighted.mean(x=ps[,1],w=ts[,1])
qminus1<-weighted.mean(x=ps[,2],w=ts[,2])
q0<-weighted.mean(x=ps[,3],w=ts[,3])
uzips$hp_1yr[i]<-(q0/qminus1-1)*100
uzips$hp_2yr[i]<-(q0/qminus2-1)*100
}
View(uzips)
ps<-subset(zipprices,area==uzips$area[1])[,3:5]
ts<-subset(ziptrades,area==uzips$area[1])[,3:5]
ps
ts
weighted.mean(x=ps[,1],w=ts[,1])
weighted.mean(x=ps[,1],w=ts[,1],na.rm=T)
#get zip prices weighted by trade frequency
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
ps<-subset(zipprices,area==uzips$area[i])[,3:5]
ts<-subset(ziptrades,area==uzips$area[i])[,3:5]
qminus2<-weighted.mean(x=ps[,1],w=ts[,1],na.rm=T)
qminus1<-weighted.mean(x=ps[,2],w=ts[,2],na.rm=T)
q0<-weighted.mean(x=ps[,3],w=ts[,3],na.rm=T)
uzips$hp_1yr[i]<-(q0/qminus1-1)*100
uzips$hp_2yr[i]<-(q0/qminus2-1)*100
}
View(uzips)
View(zipprices)
af15<-left_join(af15,uzips,by="zip")
View(af15)
af15<-readRDS("data/af15_3.rds")
#read in zip prices data
zipprices<-read.csv("data/zipprices_fv15.csv",sep=";",dec=",")
#set missing prices to NA
zipprices$Q2_13[zipprices$Q2_13==0]<-NA
zipprices$Q2_14[zipprices$Q2_14==0]<-NA
zipprices$Q2_15[zipprices$Q2_15==0]<-NA
#number of trades
ziptrades<-read.csv("data/ziptrades_fv15.csv",sep=";",dec=",")
#get zip prices weighted by trade frequency
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
ps<-subset(zipprices,area==uzips$area[i])[,3:5]
ts<-subset(ziptrades,area==uzips$area[i])[,3:5]
qminus2<-weighted.mean(x=ps[,1],w=ts[,1],na.rm=T)
qminus1<-weighted.mean(x=ps[,2],w=ts[,2],na.rm=T)
q0<-weighted.mean(x=ps[,3],w=ts[,3],na.rm=T)
uzips$hp_1yr[i]<-(q0/qminus1-1)*100
uzips$hp_2yr[i]<-(q0/qminus2-1)*100
}
#merge back in
af15<-left_join(af15,uzips,by="zip")
hist(af15$hp_1yr)
saveRDS(af15,file="data/af15_4.rds")
require(readr)
write_csv(af15,"data/af15.csv")
View(af15)
summary(lm(A~hp_1yr+factor(muninum),data=af15))
summary(lm(A~hp_2yr+factor(muninum),data=af15))
require(ggplot2)
ggplot(af15,aes(x=hp_2yr)) +
geom_histogram() +
theme_minimal()
summary(lm(I(A+B)~hp_2yr+factor(muninum),data=af15))
af15$incsupport<-af15$A+af15$B
ggplot(af15,aes(x=hp_2yr,y=incsupport)) +
geom_point() +
theme_minimal()
View(af15)
af15$incsupport<-100*(af15$A+af15$B)/af15$IAltGyldigeStemmer
View(af15)
#plot changes
ggplot(af15,aes(x=hp_2yr)) +
geom_histogram() +
theme_minimal()
ggplot(af15,aes(x=hp_2yr,y=incsupport)) +
geom_point() +
theme_minimal()
summary(incsupport~hp_2yr+factor(muninum),data=af15))
summary(incsupport~hp_2yr+factor(muninum),data=af15)
summary(lm(incsupport~hp_2yr+factor(muninum),data=af15))
af15$hp_2yrposchange<-ifelse(af15$hp_2yr>0,af15$hp_2yr,0)
af15$hp_2yrnegchange<-ifelse(af15$hp_2yr<=0,af15$hp_2yr*-1,0)
View(af15)
summary(lm(incsupport~hp_2yrposchange+hp_2yrnegchange+factor(muninum),data=af15))
summary(lm(incsupport~hp_1yr+factor(muninum),data=af15))
#split hp into poschange and negchange
af15$hp_1yrposchange<-ifelse(af15$hp_1yr>0,af15$hp_1yr,0)
af15$hp_1yrnegchange<-ifelse(af15$hp_1yr<=0,af15$hp_1yr*-1,0)
af15$hp_2yrposchange<-ifelse(af15$hp_2yr>0,af15$hp_2yr,0)
af15$hp_2yrnegchange<-ifelse(af15$hp_2yr<=0,af15$hp_2yr*-1,0)
m1yrlin<-lm(incsupport~hp_1yr+factor(muninum),data=af15)
m1yrsplin<-lm(incsupport~hp_1yrposchange+hp_1yrnegchange+factor(muninum),data=af15)
m2yrlin<-lm(incsupport~hp_2yr+factor(muninum),data=af15)
m2yrsplin<-lm(incsupport~hp_2yrposchange+hp_2yrnegchange+factor(muninum),data=af15)
require(stargazer)
stargazer(m1yrlin,m1yrsplin,m2yrlin,m2yrsplin,type="text",style="apsr")
stargazer(m1yrlin,m1yrsplin,m2yrlin,m2yrsplin,type="text",style="apsr",omit="factor")
af15<-readRDS("data/af15_3.rds")
#read in zip prices data
zipprices<-read.csv("data/zipprices_fv15.csv",sep=";",dec=",")
#set missing prices to NA
zipprices$Q2_13[zipprices$Q2_13==0]<-NA
zipprices$Q2_14[zipprices$Q2_14==0]<-NA
zipprices$Q2_15[zipprices$Q2_15==0]<-NA
#number of trades
ziptrades<-read.csv("data/ziptrades_fv15.csv",sep=";",dec=",")
#get zip prices weighted by trade frequency
uzips<-data.frame(area=unique(zipprices$area))
uzips$zip<-as.numeric(gsub("[^0-9]","",uzips$area))
uzips$hp_1yr<-NA
uzips$hp_2yr<-NA
for (i in 1:nrow(uzips)){
ps<-subset(zipprices,area==uzips$area[i])[,3:5]
ts<-subset(ziptrades,area==uzips$area[i])[,3:5]
qminus2<-weighted.mean(x=ps[,1],w=ts[,1],na.rm=T)
qminus1<-weighted.mean(x=ps[,2],w=ts[,2],na.rm=T)
q0<-weighted.mean(x=ps[,3],w=ts[,3],na.rm=T)
uzips$hp_1yr[i]<-(q0/qminus1-1)*100
uzips$hp_2yr[i]<-(q0/qminus2-1)*100
}
#merge back in
af15<-left_join(af15,uzips,by="zip")
#incumbent support
af15$incsupport<-100*(af15$A+af15$B)/af15$IAltGyldigeStemmer
#split hp into poschange and negchange
af15$hp_1yrposchange<-ifelse(af15$hp_1yr>0,af15$hp_1yr,0)
af15$hp_1yrnegchange<-ifelse(af15$hp_1yr<=0,af15$hp_1yr*-1,0)
af15$hp_2yrposchange<-ifelse(af15$hp_2yr>0,af15$hp_2yr,0)
af15$hp_2yrnegchange<-ifelse(af15$hp_2yr<=0,af15$hp_2yr*-1,0)
#save data
saveRDS(af15,file="data/af15_4.rds")
#save to csv
write_csv(af15,"data/af15.csv")
